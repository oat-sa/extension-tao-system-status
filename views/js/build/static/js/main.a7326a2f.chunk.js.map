{"version":3,"sources":["components/ReportTable/reportTable.module.scss","components/Modal/modal.module.scss","components/NumericCheck/numericCheck.module.scss","components/Charts/charts.module.scss","components/TaskQueueStatistic/taskQueueStatistic.module.scss","components/SystemStatus/systemStatus.module.scss","selectors/reportsSelectors.js","components/Modal/ModalView.js","components/Modal/index.js","utils/intl.js","components/ReportTable/index.js","components/ReportTable/ReportTableView.js","components/NumericCheck/index.js","components/NumericCheck/NumericCheckView.js","components/Charts/index.js","components/Charts/ChartsContainer.js","components/TaskQueueStatistic/TaskQueueStatisticContainer.js","components/TaskQueueStatistic/index.js","components/SystemStatus/SystemStatusView.js","components/SystemStatus/index.js","components/SystemStatus/SystemStatusContainer.js","api/reportsService.js","index.js"],"names":["module","exports","reportCategories","configuration","configurationValues","healthCheck","taskQueueFails","taskQueueFinished","taskQueueMonitoring","redisFreeSpace","rdsFreeSpace","reportsSelector","reports","report","children","categories","Object","keys","reduce","agg","item","id","data","check_id","category","find","indexOf","push","ModalView","isOpen","onClose","modalStyles","styles","title","className","container","onClick","modal","e","stopPropagation","style","head","close","content","defaultProps","Modal","key","ReportTable","columns","onShowDetails","rows","wrapper","table","row","headRow","map","column","i","cells","detailsButton","reportData","type","statusCell","cn","iconSuccess","iconError","iconWarning","cell","dangerouslySetInnerHTML","__html","l","NumericCheck","count","icon","description","descriptionTitle","descriptionAmount","Charts","this","props","c3","generate","bindto","tasksCount","width","Component","chartConfig","padding","bottom","left","x","xFormat","mimeType","names","amount","average","tooltip","format","Date","parse","toUTCString","axis","tick","label","position","y","inner","TaskQueueStatistic","state","interval","changeInterval","value","target","setState","newConfig","json","text","chart","internal","config","axis_x_tick_format","labels","load","selectContainer","onChange","SystemStatusView","header","configurationReportsContainer","length","details","date","toLocaleString","message","replace","task_label","task_report_time","P1D","P1W","P1M","report_value","SystemStatus","undefined","showModal","closeModal","reportDetails","showReportDetails","a","async","then","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7326a2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"reportTable_wrapper__GmzdE\",\"title\":\"reportTable_title__201Ql\",\"table\":\"reportTable_table__1dXel\",\"row\":\"reportTable_row__2pGP_\",\"headRow\":\"reportTable_headRow__3iXcA\",\"statusCell\":\"reportTable_statusCell__3YA2N\",\"detailsButton\":\"reportTable_detailsButton__2Jk1K\",\"iconSuccess\":\"reportTable_iconSuccess__3WF-n\",\"iconError\":\"reportTable_iconError__CUxbl\",\"iconWarning\":\"reportTable_iconWarning__1Fxsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__1hTxj\",\"modal\":\"modal_modal__21EtB\",\"close\":\"modal_close__nVJDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"numericCheck_container__6UkhO\",\"icon\":\"numericCheck_icon__4sqAZ\",\"description\":\"numericCheck_description__14lGw\",\"descriptionTitle\":\"numericCheck_descriptionTitle__11T2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"charts_container__3F804\",\"title\":\"charts_title__XTvZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"taskQueueStatistic_container__15Hi1\",\"title\":\"taskQueueStatistic_title__2Aa8l\",\"selectContainer\":\"taskQueueStatistic_selectContainer__xrYUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"configurationReportsContainer\":\"systemStatus_configurationReportsContainer__2XdmL\",\"header\":\"systemStatus_header__IN237\"};","const reportCategories = {\n  configuration: [\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\FrontEndLogCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\TaoLtiKVCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\TaoLtiDeliveryKVCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\LockServiceCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\LocalNamespaceCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\Act\\\\SNSCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\Act\\\\OdsConfigurationCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\WebSourceTTLCheck',\n  ],\n  configurationValues: [\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\DefaultLanguageCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\DefaultTimeZoneCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\DebugModeCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\HeartBeatCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\AutoSystemTerminationCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\LoginQueueCheck',\n  ],\n  healthCheck: [\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\TaoUpdateCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\Instance\\\\CronCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\Instance\\\\WriteConfigDataCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\Instance\\\\WkhtmltopdfCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\Instance\\\\MessagesJsonCheck',\n      'oat\\\\taoSystemStatus\\\\model\\\\Check\\\\Instance\\\\MathJaxCheck',\n  ],\n  taskQueueFails: ['oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\TaskQueueFailsCheck'],\n  taskQueueFinished: ['oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\TaskQueueFinishedCheck'],\n  taskQueueMonitoring: ['oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\TaskQueueMonitoring'],\n  redisFreeSpace: ['oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\AwsRedisFreeSpaceCheck'],\n  rdsFreeSpace: ['oat\\\\taoSystemStatus\\\\model\\\\Check\\\\System\\\\AwsRDSFreeSpaceCheck'],\n}\n\nexport const reportsSelector = (({ report: { children: reports } }) => {\n  const categories = Object.keys(reportCategories)\n\n  return reports.reduce(\n      (agg, item) => {\n          const { data: { check_id: id } } = item\n          const category = categories.find((category) =>\n              reportCategories[category].indexOf(id) !== -1\n          )\n\n          if (category) {\n              agg[category].push(item)\n          }\n\n          return agg\n      },\n      {\n          configuration: [],\n          configurationValues: [],\n          healthCheck: [],\n          taskQueueFails: [],\n          taskQueueFinished: [],\n          taskQueueMonitoring: [],\n          redisFreeSpace: [],\n          rdsFreeSpace: [],\n      }\n  )\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from 'components/Modal/modal.module.scss'\n\nconst ModalView = ({ children, isOpen, onClose, styles: modalStyles, title }) => {\n  if (!isOpen) {\n    return null\n  }\n\n  return (\n    <div className={styles.container} onClick={onClose}>\n      <div className={styles.modal} onClick={(e) => e.stopPropagation()} style={modalStyles}>\n        <div className={styles.head}>\n          <div className={styles.title}>\n            {title}\n          </div>\n          <div className={styles.close} onClick={onClose}>&times;</div>\n        </div>\n        <div className={styles.content}>\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nModalView.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool,\n  styles: PropTypes.object,\n  title: PropTypes.string,\n}\n\nModalView.defaultProps = {\n  isOpen: false,\n  styles: {},\n  title: '',\n}\n\nexport default ModalView\n","import Modal from 'components/Modal/ModalView'\n\nexport default Modal\n","export default (key) => {\n  return key\n}\n","import ReportTable from 'components/ReportTable/ReportTableView'\n\nexport default ReportTable\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport l from 'utils/intl'\n\nimport styles from 'components/ReportTable/reportTable.module.scss'\n\nconst ReportTableView = ({ category, columns, onShowDetails, rows }) => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.title}>\n        {category}\n      </div>\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <thead>\n            <tr className={`${styles.row} ${styles.headRow}`}>\n              {columns.map((column, i) => (<th key={i}>{column}</th>))}\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((\n              {\n                cells,\n                detailsButton,\n                reportData,\n                type\n              },\n              i\n            ) => (\n                <tr className={styles.row} key={i}>\n                  {type && (\n                    <td className={styles.statusCell}>\n                      <div\n                        className={cn({\n                          [styles.iconSuccess]: type === 'success' || type === 'info',\n                          [styles.iconError]: type === 'error',\n                          [styles.iconWarning]: type === 'warning',\n                        })}\n                      >\n                        <i\n                          className={cn({\n                            'icon-result-ok': type === 'success' || type === 'info',\n                            'icon-result-nok': type === 'error',\n                            'icon-warning': type === 'warning',\n                          })}\n                        />\n                      </div>\n                    </td>\n                  )}\n                  {cells.map((cell, i) => (\n                    <td\n                      key={i}\n                      dangerouslySetInnerHTML={{ __html: cell }}\n                    />\n                  ))}\n                  {detailsButton && (\n                    <th>\n                      <button\n                        className={styles.detailsButton}\n                        onClick={() => onShowDetails(reportData)}\n                        type=\"button\"\n                      >\n                        {l('View Report')}\n                      </button>\n                    </th>\n                  )}\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\n\nReportTableView.propTypes = {\n  category: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  onShowDetails: PropTypes.func,\n  rows: PropTypes.array.isRequired,\n}\n\n\nexport default ReportTableView\n","import NumericCheck from 'components/NumericCheck/NumericCheckView'\n\nexport default NumericCheck\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport l from 'utils/intl'\n\nimport styles from 'components/NumericCheck/numericCheck.module.scss'\n\nconst NumericCheckView = ({ count }) => (\n  <div className={styles.container}>\n    <div className={styles.icon}>\n      <i className=\"icon-speed\" />\n    </div>\n    <div className={styles.description}>\n      <div className={styles.descriptionTitle}>{l('Tasks In the Queue')}</div>\n      <div className={styles.descriptionAmount}>{count}</div>\n    </div>\n  </div>\n)\n\nNumericCheckView.propTypes = {\n  count: PropTypes.number.isRequired,\n}\n\nexport default NumericCheckView\n","import Charts from 'components/Charts/ChartsContainer'\n\nexport default Charts\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport c3 from 'c3'\n\nimport NumericCheck from 'components/NumericCheck'\nimport l from 'utils/intl'\n\nimport styles from 'components/Charts/charts.module.scss'\n\nclass ChartsContainer extends Component {\n  componentDidMount() {\n    const { redisFreeSpace, rdsFreeSpace } = this.props\n\n    c3.generate({\n      bindto: '.js-tasks-donut-1',\n      data: {\n        columns: [\n          [l('Free space'), redisFreeSpace],\n          [l('Used space'), 100 - redisFreeSpace],\n        ],\n        type: 'donut',\n      },\n    });\n    c3.generate({\n      bindto: '.js-tasks-donut-2',\n      data: {\n        columns: [\n          [l('Free space'), rdsFreeSpace],\n          [l('Used space'), 100 - rdsFreeSpace],\n        ],\n        type: 'donut',\n      },\n    });\n  }\n\n  render() {\n    const {tasksCount} = this.props;\n\n    return (\n      <div className={styles.container}>\n        <div>\n          <div className={styles.title}>{l('Used space on ElastiCache storage')}</div>\n          <div className=\"js-tasks-donut-1\" style={{ width: 300 }} />\n        </div>\n        <div>\n          <div className={styles.title}>{l('Used space on RDS storage')}</div>\n          <div className=\"js-tasks-donut-2\" style={{ width: 300 }} />\n        </div>\n        <NumericCheck count={tasksCount} />\n      </div>\n    )\n  }\n}\n\nChartsContainer.propTypes = {\n  rdsFreeSpace: PropTypes.number.isRequired,\n  redisFreeSpace: PropTypes.number.isRequired,\n  tasksCount: PropTypes.number.isRequired,\n}\n\nexport default ChartsContainer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport c3 from 'c3'\n\nimport l from 'utils/intl'\n\nimport styles from 'components/TaskQueueStatistic/taskQueueStatistic.module.scss'\n\nconst chartConfig = {\n  bindto: '.js-tasks-graph',\n  padding: {\n    bottom: 0,\n    left: 0\n  },\n  data: {\n    x: 'time',\n    xFormat: '%Y-%m-%d %H:%M:%S',\n    mimeType: 'json',\n    type: 'line',\n    names: {\n      amount: l('Tasks processed'),\n      average: l('Average processing time, s')\n    }\n  },\n  tooltip: {\n    format: {\n      title: function (x) {\n        return new Date(Date.parse(x)).toUTCString();\n      }\n    }\n  },\n  axis: {\n    x: {\n      type: 'timeseries',\n      tick: {\n        format: '%H:%M'\n      },\n      label: {\n        position: 'bottom center'\n      }\n    },\n    y: {\n      inner: true,\n      label: {\n        position: 'outer-top',\n      }\n    }\n  }\n}\n\nclass TaskQueueStatisticContainer extends Component {\n  state = {\n    interval: 'P1D',\n  }\n\n  componentDidMount() {\n    const { data } = this.props\n    const { interval } = this.state\n\n    this.chart = c3.generate({\n      ...chartConfig,\n      data: {\n        ...chartConfig.data,\n        json: data[interval],\n      },\n      axis: {\n        ...chartConfig.axis,\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: interval === 'P1D' ? '%H:%M' : '%m-%d'\n          },\n          label: {\n            text: interval === 'P1D' ? l('Hours') : l('Days')\n          }\n        }\n      }\n    })\n  }\n\n  changeInterval = ({ target: { value } }) => {\n    const { data } = this.props\n\n    this.setState({\n      interval: value,\n    })\n\n    const newConfig = {\n      ...chartConfig,\n      data: {\n        ...chartConfig.data,\n        json: data[value],\n      },\n      axis: {\n        ...chartConfig.axis,\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: value === 'P1D' ? '%H:%M' : '%m-%d'\n          },\n          label: {\n            text: value === 'P1D' ? l('Hours') : l('Days')\n          }\n        }\n      }\n    }\n\n    this.chart.internal.config.axis_x_tick_format = newConfig.axis.x.tick.format;\n    this.chart.axis.labels({\n      x: newConfig.axis.x.label.text\n    });\n    this.chart.load(newConfig.data);\n  }\n\n  render() {\n    const { interval } = this.state\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.title}>\n          {l('Task Queue Statistics')}\n        </div>\n        <div className={styles.selectContainer}>\n          <select value={interval} onChange={this.changeInterval}>\n            <option value=\"P1D\">{l('Last Day')}</option>\n            <option value=\"P1W\">{l('Last Week')}</option>\n            <option value=\"P1M\">{l('Last Month')}</option>\n          </select>\n        </div>\n        <div className=\"js-tasks-graph\" />\n      </div>\n    )\n  }\n}\n\nTaskQueueStatisticContainer.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default TaskQueueStatisticContainer\n","import TaskQueueStatistic from 'components/TaskQueueStatistic/TaskQueueStatisticContainer'\n\nexport default TaskQueueStatistic\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Charts from 'components/Charts'\nimport ReportTable from 'components/ReportTable'\nimport TaskQueueStatistic from 'components/TaskQueueStatistic'\nimport l from 'utils/intl'\n\nimport styles from 'components/SystemStatus/systemStatus.module.scss'\n\nconst SystemStatusView = ({\n  onShowDetails,\n  reports: {\n    configuration,\n    configurationValues,\n    healthCheck,\n    taskQueueFails,\n    taskQueueFinished,\n    redisFreeSpace,\n    rdsFreeSpace,\n    taskQueueMonitoring,\n  },\n}) => (\n    <div className={styles.container}>\n      <h1 className={styles.header}>{l('Welcome to TAO\\'s status page hub')}</h1>\n      <div className={styles.configurationReportsContainer}>\n        {!!configuration.length && (\n          <ReportTable\n            category={l('TAO Configuration')}\n            columns={[l('Status'), l('Description'), l('Date')]}\n            rows={\n              configuration\n                .map(({ type, data: { details, date } }) => ({\n                  type,\n                  cells: [details, new Date(date * 1000).toLocaleString()],\n                }))\n            }\n          />\n        )}\n        {!!configurationValues.length && (\n          <ReportTable\n            category={l('Configuration Values')}\n            columns={[l('Status'), l('Description'), l('Value')]}\n            rows={\n              configurationValues\n                .map(({ type, message, data: { details } }) => ({\n                  type,\n                  cells: [details, message.replace(/\\r?\\n/g, '<br />')],\n                }))\n            }\n          />\n        )}\n      </div>\n      {!!healthCheck.length && (\n        <ReportTable\n          category={l('Health/Readiness check')}\n          columns={[l('Status'), l('Description'), l('Details')]}\n          rows={\n            healthCheck\n              .map(({ type, message, data: { details } }) => ({\n                type,\n                cells: [details, message.replace(/\\r?\\n/g, '<br />')],\n              }))\n          }\n        />\n      )}\n      {taskQueueFails[0] && (\n        <ReportTable\n          category={l('Last failed tasks in the task queue')}\n          columns={[l('Task'), l('Date'), '']}\n          onShowDetails={onShowDetails}\n          rows={\n            taskQueueFails[0].children\n              .map(({ children, data: { task_label, task_report_time } }) => ({\n                cells: [task_label, task_report_time],\n                detailsButton: true,\n                reportData: children,\n              }))\n          }\n        />\n      )}\n      {taskQueueFinished[0] && (\n        <TaskQueueStatistic\n          data={{\n            P1D: taskQueueFinished[0].data.P1D,\n            P1W: taskQueueFinished[0].data.P1W,\n            P1M: taskQueueFinished[0].data.P1M,\n          }}\n        />\n      )}\n      {redisFreeSpace[0] && rdsFreeSpace[0] && taskQueueMonitoring[0] && (\n        <Charts\n          redisFreeSpace={redisFreeSpace[0].data.value}\n          rdsFreeSpace={rdsFreeSpace[0].data.value}\n          tasksCount={taskQueueMonitoring[0].data.report_value}\n        />\n      )}\n    </div>\n  )\n\nSystemStatusView.propTypes = {\n  onShowDetails: PropTypes.func.isRequired,\n  reports: PropTypes.object,\n}\n\n\nexport default SystemStatusView\n","import SystemStatus from 'components/SystemStatus/SystemStatusContainer'\n\nexport default SystemStatus\n","import React, { Component, Fragment } from 'react'\n\nimport { getReports } from 'api/reportsService'\nimport { reportsSelector } from 'selectors/reportsSelectors'\nimport Modal from 'components/Modal'\nimport ReportTable from 'components/ReportTable'\nimport SystemStatusView from 'components/SystemStatus/SystemStatusView'\nimport l from 'utils/intl'\n\nclass SystemStatusContainer extends Component {\n  state = {\n    reports: undefined,\n    showModal: false,\n  }\n\n  componentDidMount() {\n    getReports()\n      .then((data) => {\n        this.setState({\n          reports: reportsSelector(data),\n        })\n      })\n      .catch((error) => console.log(error))\n  }\n\n  closeModal = () => {\n    this.setState({\n      reportDetails: undefined,\n      showModal: false,\n    })\n  }\n\n  showReportDetails = (reportDetails) => {\n    this.setState({\n      reportDetails,\n      showModal: true,\n    });\n  }\n\n  render() {\n    const { reports, reportDetails, showModal } = this.state\n\n    if (!reports) {\n      return null\n    }\n\n    return (\n      <Fragment>\n        <SystemStatusView\n          onShowDetails={this.showReportDetails}\n          reports={reports}\n        />\n        {reportDetails && (\n          <Modal onClose={this.closeModal} isOpen={showModal}>\n            <ReportTable\n              category={l('Task details')}\n              columns={[l('Status'), l('Description')]}\n              rows={\n                reportDetails\n                  .map(({ type, message }) => ({\n                    type,\n                    [`is${type}`]: true,\n                    cells: [message.replace(/\\r?\\n/g, '<br />')],\n                  }))\n              }\n            />\n          </Modal>\n        )}\n      </Fragment>\n    )\n  }\n}\n\nexport default SystemStatusContainer\n","import data from './data.json'\n\nexport const getReports = async () => data\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport SystemStatus from 'components/SystemStatus'\n\nReactDOM.render(<SystemStatus />, document.getElementById('root'))\n"],"sourceRoot":""}